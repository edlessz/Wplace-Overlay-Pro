export const WPLACE_FREE: number[][] = [
	[0, 0, 0],
	[60, 60, 60],
	[120, 120, 120],
	[210, 210, 210],
	[255, 255, 255],
	[96, 0, 24],
	[237, 28, 36],
	[255, 127, 39],
	[246, 170, 9],
	[249, 221, 59],
	[255, 250, 188],
	[14, 185, 104],
	[19, 230, 123],
	[135, 255, 94],
	[12, 129, 110],
	[16, 174, 166],
	[19, 225, 190],
	[96, 247, 242],
	[40, 80, 158],
	[64, 147, 228],
	[107, 80, 246],
	[153, 177, 251],
	[120, 12, 153],
	[170, 56, 185],
	[224, 159, 249],
	[203, 0, 122],
	[236, 31, 128],
	[243, 141, 169],
	[104, 70, 52],
	[149, 104, 42],
	[248, 178, 119],
];
export const WPLACE_PAID: number[][] = [
	[170, 170, 170],
	[165, 14, 30],
	[250, 128, 114],
	[228, 92, 26],
	[156, 132, 49],
	[197, 173, 49],
	[232, 212, 95],
	[74, 107, 58],
	[90, 148, 74],
	[132, 197, 115],
	[15, 121, 159],
	[187, 250, 242],
	[125, 199, 255],
	[77, 49, 184],
	[74, 66, 132],
	[122, 113, 196],
	[181, 174, 241],
	[155, 82, 73],
	[209, 128, 120],
	[250, 182, 164],
	[219, 164, 99],
	[123, 99, 82],
	[156, 132, 107],
	[214, 181, 148],
	[209, 128, 81],
	[255, 197, 165],
	[109, 100, 63],
	[148, 140, 107],
	[205, 197, 158],
	[51, 57, 65],
	[109, 117, 141],
	[179, 185, 209],
];
export const WPLACE_NAMES: Record<string, string> = {
	"0,0,0": "Black",
	"60,60,60": "Dark Gray",
	"120,120,120": "Gray",
	"210,210,210": "Light Gray",
	"255,255,255": "White",
	"96,0,24": "Deep Red",
	"237,28,36": "Red",
	"255,127,39": "Orange",
	"246,170,9": "Gold",
	"249,221,59": "Yellow",
	"255,250,188": "Light Yellow",
	"14,185,104": "Dark Green",
	"19,230,123": "Green",
	"135,255,94": "Light Green",
	"12,129,110": "Dark Teal",
	"16,174,166": "Teal",
	"19,225,190": "Light Teal",
	"96,247,242": "Cyan",
	"40,80,158": "Dark Blue",
	"64,147,228": "Blue",
	"107,80,246": "Indigo",
	"153,177,251": "Light Indigo",
	"120,12,153": "Dark Purple",
	"170,56,185": "Purple",
	"224,159,249": "Light Purple",
	"203,0,122": "Dark Pink",
	"236,31,128": "Pink",
	"243,141,169": "Light Pink",
	"104,70,52": "Dark Brown",
	"149,104,42": "Brown",
	"248,178,119": "Beige",
	"170,170,170": "Medium Gray",
	"165,14,30": "Dark Red",
	"250,128,114": "Light Red",
	"228,92,26": "Dark Orange",
	"156,132,49": "Dark Goldenrod",
	"197,173,49": "Goldenrod",
	"232,212,95": "Light Goldenrod",
	"74,107,58": "Dark Olive",
	"90,148,74": "Olive",
	"132,197,115": "Light Olive",
	"15,121,159": "Dark Cyan",
	"187,250,242": "Light Cyan",
	"125,199,255": "Light Blue",
	"77,49,184": "Dark Indigo",
	"74,66,132": "Dark Slate Blue",
	"122,113,196": "Slate Blue",
	"181,174,241": "Light Slate Blue",
	"155,82,73": "Dark Peach",
	"209,128,120": "Peach",
	"250,182,164": "Light Peach",
	"219,164,99": "Light Brown",
	"123,99,82": "Dark Tan",
	"156,132,107": "Tan",
	"214,181,148": "Light Tan",
	"209,128,81": "Dark Beige",
	"255,197,165": "Light Beige",
	"109,100,63": "Dark Stone",
	"148,140,107": "Stone",
	"205,197,158": "Light Stone",
	"51,57,65": "Dark Slate",
	"109,117,141": "Slate",
	"179,185,209": "Light Slate",
};
export const DEFAULT_FREE_KEYS = WPLACE_FREE.map(
	([r, g, b]) => `${r},${g},${b}`,
);
export const DEFAULT_PAID_KEYS: string[] = [];

// Auto-generated by png_to_bitmask_js.py
// Each tile is a 25-bit mask (1 = black, 0 = transparent),
// bits packed LSB-first in row-major order: bit = y*5 + x for (x,y) in [0..4].
export const SYMBOL_W = 5;
export const SYMBOL_H = 5;
export const SYMBOL_TILES = new Uint32Array([
	0x04abaa4, 0x0489224, 0x0e8922e, 0x0a8d6aa, 0x0e8feae, 0x1fabb75, 0x0efffee,
	0x0eeeeee, 0x1fafebf, 0x1fd82bf, 0x1f212bf, 0x0eddeea, 0x0afbbea, 0x094ee52,
	0x0eafa88, 0x0477fea, 0x0edd76e, 0x1bda95c, 0x0367cd8, 0x0e8d62e, 0x1bdef7f,
	0x146f46f, 0x1577dd5, 0x0e756b5, 0x04739c4, 0x0add5c4, 0x0ad936a, 0x067f308,
	0x04fbbee, 0x1bd837b, 0x11701d1, 0x1e601e6, 0x1260126, 0x0f7bf14, 0x1fee34c,
	0x15a82b5, 0x0db01b6, 0x077bd9e, 0x074c65c, 0x15756ae, 0x1b23ab5, 0x08c1062,
	0x1cf18e3, 0x0477dd5, 0x11729d1, 0x1999a79, 0x1759577, 0x04f837b, 0x0e247ff,
	0x1123891, 0x1b8923b, 0x0476dc4, 0x1466cc5, 0x071d71c, 0x15f29f5, 0x1baa94e,
	0x11f9231, 0x14d0754, 0x1bac6bb, 0x0427c84, 0x15fd48e, 0x19a28b3, 0x04ffdc4,
	0x0e8814a,
]);

// Example: test a bit (x,y) in tile i
// const idx = y * TILE_W + x;
// const bit = (TILES[i] >>> idx) & 1;
